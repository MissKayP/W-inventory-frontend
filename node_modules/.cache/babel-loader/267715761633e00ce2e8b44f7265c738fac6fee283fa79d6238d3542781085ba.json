{"ast":null,"code":"var _jsxFileName = \"/Users/Khahli/Desktop/wings-cafe-inventory/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { InventoryContext } from '../context/InventoryContext';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const {\n    loginUser,\n    registerUser\n  } = useContext(InventoryContext);\n  const navigate = useNavigate();\n  const [isRegistering, setIsRegistering] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const handleLogin = () => {\n    loginUser(username, password); // Attempt to log in\n    navigate('/'); // Redirect to dashboard after login\n  };\n  const handleRegister = () => {\n    if (password === confirmPassword) {\n      registerUser({\n        username,\n        password\n      });\n      setIsRegistering(false); // Switch to login view\n      alert('Registration successful! Please log in.');\n    } else {\n      alert('Passwords do not match!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isRegistering ? 'Register' : 'Login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), isRegistering && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      value: confirmPassword,\n      onChange: e => setConfirmPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: isRegistering ? handleRegister : handleLogin,\n      children: isRegistering ? 'Register' : 'Login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsRegistering(!isRegistering),\n      children: isRegistering ? 'Already have an account? Login' : 'New here? Register'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"mgRxDU4v7bCeVt0axIeIAWvCIOs=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useContext","InventoryContext","useNavigate","jsxDEV","_jsxDEV","Login","_s","loginUser","registerUser","navigate","isRegistering","setIsRegistering","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","handleLogin","handleRegister","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/Khahli/Desktop/wings-cafe-inventory/src/components/Login.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport { InventoryContext } from '../context/InventoryContext';\nimport { useNavigate } from 'react-router-dom';\n\nconst Login = () => {\n  const { loginUser, registerUser } = useContext(InventoryContext);\n  const navigate = useNavigate();\n\n  const [isRegistering, setIsRegistering] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const handleLogin = () => {\n    loginUser(username, password); // Attempt to log in\n    navigate('/'); // Redirect to dashboard after login\n  };\n\n  const handleRegister = () => {\n    if (password === confirmPassword) {\n      registerUser({ username, password });\n      setIsRegistering(false); // Switch to login view\n      alert('Registration successful! Please log in.');\n    } else {\n      alert('Passwords do not match!');\n    }\n  };\n\n  return (\n    <div>\n      <h1>{isRegistering ? 'Register' : 'Login'}</h1>\n\n      <input\n        type=\"text\"\n        placeholder=\"Username\"\n        value={username}\n        onChange={(e) => setUsername(e.target.value)}\n      />\n      <input\n        type=\"password\"\n        placeholder=\"Password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      {isRegistering && (\n        <input\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n          value={confirmPassword}\n          onChange={(e) => setConfirmPassword(e.target.value)}\n        />\n      )}\n      \n      <button onClick={isRegistering ? handleRegister : handleLogin}>\n        {isRegistering ? 'Register' : 'Login'}\n      </button>\n\n      <button onClick={() => setIsRegistering(!isRegistering)}>\n        {isRegistering ? 'Already have an account? Login' : 'New here? Register'}\n      </button>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,SAASC,gBAAgB,QAAQ,6BAA6B;AAC9D,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM;IAAEC,SAAS;IAAEC;EAAa,CAAC,GAAGR,UAAU,CAACC,gBAAgB,CAAC;EAChE,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACiB,eAAe,EAAEC,kBAAkB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMmB,WAAW,GAAGA,CAAA,KAAM;IACxBX,SAAS,CAACK,QAAQ,EAAEE,QAAQ,CAAC,CAAC,CAAC;IAC/BL,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;EACjB,CAAC;EAED,MAAMU,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIL,QAAQ,KAAKE,eAAe,EAAE;MAChCR,YAAY,CAAC;QAAEI,QAAQ;QAAEE;MAAS,CAAC,CAAC;MACpCH,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;MACzBS,KAAK,CAAC,yCAAyC,CAAC;IAClD,CAAC,MAAM;MACLA,KAAK,CAAC,yBAAyB,CAAC;IAClC;EACF,CAAC;EAED,oBACEhB,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAKX,aAAa,GAAG,UAAU,GAAG;IAAO;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAE/CrB,OAAA;MACEsB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEhB,QAAS;MAChBiB,QAAQ,EAAGC,CAAC,IAAKjB,WAAW,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACFrB,OAAA;MACEsB,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEd,QAAS;MAChBe,QAAQ,EAAGC,CAAC,IAAKf,WAAW,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,EACDf,aAAa,iBACZN,OAAA;MACEsB,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,kBAAkB;MAC9BC,KAAK,EAAEZ,eAAgB;MACvBa,QAAQ,EAAGC,CAAC,IAAKb,kBAAkB,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CACF,eAEDrB,OAAA;MAAQ4B,OAAO,EAAEtB,aAAa,GAAGS,cAAc,GAAGD,WAAY;MAAAG,QAAA,EAC3DX,aAAa,GAAG,UAAU,GAAG;IAAO;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eAETrB,OAAA;MAAQ4B,OAAO,EAAEA,CAAA,KAAMrB,gBAAgB,CAAC,CAACD,aAAa,CAAE;MAAAW,QAAA,EACrDX,aAAa,GAAG,gCAAgC,GAAG;IAAoB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACnB,EAAA,CA1DID,KAAK;EAAA,QAEQH,WAAW;AAAA;AAAA+B,EAAA,GAFxB5B,KAAK;AA4DX,eAAeA,KAAK;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}