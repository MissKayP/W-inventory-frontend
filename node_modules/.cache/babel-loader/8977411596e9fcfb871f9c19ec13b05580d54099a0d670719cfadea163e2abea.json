{"ast":null,"code":"var _jsxFileName = \"/Users/Khahli/Desktop/wings-cafe-inventory/src/context/InventoryContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// InventoryContext.js\nimport React, { createContext, useState, useContext } from 'react';\n\n// Create context for inventory management\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InventoryContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the InventoryContext\nexport const useInventory = () => {\n  _s();\n  return useContext(InventoryContext);\n};\n\n// Provider component\n_s(useInventory, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const InventoryProvider = ({\n  children\n}) => {\n  _s2();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [products, setProducts] = useState([]); // Manage products\n  const [users, setUsers] = useState([]); // Manage users\n  const [currentUser, setCurrentUser] = useState(null);\n\n  // User authentication functions\n  const loginUser = credentials => {\n    const user = users.find(user => user.username === credentials.username && user.password === credentials.password);\n    if (user) {\n      setIsAuthenticated(true);\n      setCurrentUser(user);\n      return true; // Indicate successful login\n    }\n    return false; // Indicate failed login\n  };\n  const logoutUser = () => {\n    setIsAuthenticated(false);\n    setCurrentUser(null);\n  };\n  const registerUser = newUser => {\n    const userExists = users.some(user => user.username === newUser.username);\n    if (!userExists) {\n      setUsers(prevUsers => [...prevUsers, newUser]);\n      return true; // Registration successful\n    }\n    return false; // Username already exists\n  };\n\n  // Product management functions\n  const addProduct = product => {\n    setProducts(prev => [...prev, product]);\n  };\n  const updateProduct = updatedProduct => {\n    setProducts(prev => prev.map(product => product.id === updatedProduct.id ? updatedProduct : product));\n  };\n  const deleteProduct = id => {\n    setProducts(prev => prev.filter(product => product.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(InventoryContext.Provider, {\n    value: {\n      isAuthenticated,\n      loginUser,\n      logoutUser,\n      registerUser,\n      // Provide registerUser in context\n      products,\n      addProduct,\n      updateProduct,\n      deleteProduct,\n      users\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s2(InventoryProvider, \"BwSm8h7V+KJ8UEEDbH0QcOv2KYs=\");\n_c = InventoryProvider;\nvar _c;\n$RefreshReg$(_c, \"InventoryProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","InventoryContext","useInventory","_s","InventoryProvider","children","_s2","isAuthenticated","setIsAuthenticated","products","setProducts","users","setUsers","currentUser","setCurrentUser","loginUser","credentials","user","find","username","password","logoutUser","registerUser","newUser","userExists","some","prevUsers","addProduct","product","prev","updateProduct","updatedProduct","map","id","deleteProduct","filter","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Khahli/Desktop/wings-cafe-inventory/src/context/InventoryContext.js"],"sourcesContent":["// InventoryContext.js\nimport React, { createContext, useState, useContext } from 'react';\n\n// Create context for inventory management\nexport const InventoryContext = createContext();\n\n// Custom hook to use the InventoryContext\nexport const useInventory = () => {\n  return useContext(InventoryContext);\n};\n\n// Provider component\nexport const InventoryProvider = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [products, setProducts] = useState([]); // Manage products\n  const [users, setUsers] = useState([]); // Manage users\n  const [currentUser, setCurrentUser] = useState(null);\n\n  // User authentication functions\n  const loginUser = (credentials) => {\n    const user = users.find(\n      (user) => user.username === credentials.username && user.password === credentials.password\n    );\n    if (user) {\n      setIsAuthenticated(true);\n      setCurrentUser(user);\n      return true; // Indicate successful login\n    }\n    return false; // Indicate failed login\n  };\n\n  const logoutUser = () => {\n    setIsAuthenticated(false);\n    setCurrentUser(null);\n  };\n\n  const registerUser = (newUser) => {\n    const userExists = users.some((user) => user.username === newUser.username);\n    if (!userExists) {\n      setUsers((prevUsers) => [...prevUsers, newUser]);\n      return true; // Registration successful\n    }\n    return false; // Username already exists\n  };\n\n  // Product management functions\n  const addProduct = (product) => {\n    setProducts((prev) => [...prev, product]);\n  };\n\n  const updateProduct = (updatedProduct) => {\n    setProducts((prev) =>\n      prev.map((product) => (product.id === updatedProduct.id ? updatedProduct : product))\n    );\n  };\n\n  const deleteProduct = (id) => {\n    setProducts((prev) => prev.filter((product) => product.id !== id));\n  };\n\n  return (\n    <InventoryContext.Provider\n      value={{\n        isAuthenticated,\n        loginUser,\n        logoutUser,\n        registerUser, // Provide registerUser in context\n        products,\n        addProduct,\n        updateProduct,\n        deleteProduct,\n        users,\n      }}\n    >\n      {children}\n    </InventoryContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}