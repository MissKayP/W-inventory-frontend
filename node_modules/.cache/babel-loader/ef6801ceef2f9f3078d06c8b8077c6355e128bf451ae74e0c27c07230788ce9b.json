{"ast":null,"code":"var _jsxFileName = \"/Users/Khahli/Desktop/wings-cafe-inventory/src/context/InventoryContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// InventoryContext.js\nimport React, { createContext, useState, useContext, useEffect } from 'react';\n\n// Create context for inventory management\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InventoryContext = /*#__PURE__*/createContext();\nexport const useInventory = () => {\n  _s();\n  return useContext(InventoryContext);\n};\n\n// Provider component\n_s(useInventory, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const InventoryProvider = ({\n  children\n}) => {\n  _s2();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [users, setUsers] = useState(JSON.parse(localStorage.getItem('users')) || []);\n  const registerUser = user => {\n    setUsers(prevUsers => {\n      const updatedUsers = [...prevUsers, user];\n      localStorage.setItem('users', JSON.stringify(updatedUsers));\n      return updatedUsers;\n    });\n  };\n  const loginUser = (username, password) => {\n    const foundUser = users.find(user => user.username === username && user.password === password);\n    if (foundUser) {\n      setIsAuthenticated(true);\n      localStorage.setItem('isAuthenticated', 'true');\n    } else {\n      alert('Invalid credentials');\n    }\n  };\n  const logoutUser = () => {\n    setIsAuthenticated(false);\n    localStorage.removeItem('isAuthenticated');\n  };\n  return /*#__PURE__*/_jsxDEV(InventoryContext.Provider, {\n    value: {\n      isAuthenticated,\n      loginUser,\n      logoutUser,\n      registerUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s2(InventoryProvider, \"IvUDOEPhTA7lTMI4JWi14TWaLzI=\");\n_c = InventoryProvider;\nvar _c;\n$RefreshReg$(_c, \"InventoryProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","InventoryContext","useInventory","_s","InventoryProvider","children","_s2","isAuthenticated","setIsAuthenticated","users","setUsers","JSON","parse","localStorage","getItem","registerUser","user","prevUsers","updatedUsers","setItem","stringify","loginUser","username","password","foundUser","find","alert","logoutUser","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Khahli/Desktop/wings-cafe-inventory/src/context/InventoryContext.js"],"sourcesContent":["// InventoryContext.js\nimport React, { createContext, useState, useContext, useEffect } from 'react';\n\n// Create context for inventory management\nexport const InventoryContext = createContext();\n\nexport const useInventory = () => {\n  return useContext(InventoryContext);\n};\n\n// Provider component\nexport const InventoryProvider = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [users, setUsers] = useState(\n    JSON.parse(localStorage.getItem('users')) || []\n  );\n\n  const registerUser = (user) => {\n    setUsers((prevUsers) => {\n      const updatedUsers = [...prevUsers, user];\n      localStorage.setItem('users', JSON.stringify(updatedUsers));\n      return updatedUsers;\n    });\n  };\n\n  const loginUser = (username, password) => {\n    const foundUser = users.find(\n      (user) => user.username === username && user.password === password\n    );\n    if (foundUser) {\n      setIsAuthenticated(true);\n      localStorage.setItem('isAuthenticated', 'true');\n    } else {\n      alert('Invalid credentials');\n    }\n  };\n\n  const logoutUser = () => {\n    setIsAuthenticated(false);\n    localStorage.removeItem('isAuthenticated');\n  };\n\n  return (\n    <InventoryContext.Provider\n      value={{\n        isAuthenticated,\n        loginUser,\n        logoutUser,\n        registerUser,\n      }}\n    >\n      {children}\n    </InventoryContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;;AAE7E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,gBAAgB,gBAAGN,aAAa,CAAC,CAAC;AAE/C,OAAO,MAAMO,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,OAAON,UAAU,CAACI,gBAAgB,CAAC;AACrC,CAAC;;AAED;AAAAE,EAAA,CAJaD,YAAY;AAKzB,OAAO,MAAME,iBAAiB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACjD,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAChCe,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAC/C,CAAC;EAED,MAAMC,YAAY,GAAIC,IAAI,IAAK;IAC7BN,QAAQ,CAAEO,SAAS,IAAK;MACtB,MAAMC,YAAY,GAAG,CAAC,GAAGD,SAAS,EAAED,IAAI,CAAC;MACzCH,YAAY,CAACM,OAAO,CAAC,OAAO,EAAER,IAAI,CAACS,SAAS,CAACF,YAAY,CAAC,CAAC;MAC3D,OAAOA,YAAY;IACrB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMG,SAAS,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;IACxC,MAAMC,SAAS,GAAGf,KAAK,CAACgB,IAAI,CACzBT,IAAI,IAAKA,IAAI,CAACM,QAAQ,KAAKA,QAAQ,IAAIN,IAAI,CAACO,QAAQ,KAAKA,QAC5D,CAAC;IACD,IAAIC,SAAS,EAAE;MACbhB,kBAAkB,CAAC,IAAI,CAAC;MACxBK,YAAY,CAACM,OAAO,CAAC,iBAAiB,EAAE,MAAM,CAAC;IACjD,CAAC,MAAM;MACLO,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACF,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBnB,kBAAkB,CAAC,KAAK,CAAC;IACzBK,YAAY,CAACe,UAAU,CAAC,iBAAiB,CAAC;EAC5C,CAAC;EAED,oBACE5B,OAAA,CAACC,gBAAgB,CAAC4B,QAAQ;IACxBC,KAAK,EAAE;MACLvB,eAAe;MACfc,SAAS;MACTM,UAAU;MACVZ;IACF,CAAE;IAAAV,QAAA,EAEDA;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAEhC,CAAC;AAAC5B,GAAA,CA3CWF,iBAAiB;AAAA+B,EAAA,GAAjB/B,iBAAiB;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}