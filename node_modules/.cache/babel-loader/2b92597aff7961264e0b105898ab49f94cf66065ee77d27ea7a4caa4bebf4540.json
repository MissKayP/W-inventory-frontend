{"ast":null,"code":"var _jsxFileName = \"/Users/Khahli/Desktop/wings-cafe-inventory/src/context/InventoryContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InventoryContext = /*#__PURE__*/createContext();\nexport const InventoryProvider = ({\n  children\n}) => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [transactions, setTransactions] = useState([]);\n\n  // Load products from localStorage on initial load\n  useEffect(() => {\n    const storedProducts = localStorage.getItem('products');\n    if (storedProducts) {\n      setProducts(JSON.parse(storedProducts));\n    }\n    const storedTransactions = localStorage.getItem('transactions');\n    if (storedTransactions) {\n      setTransactions(JSON.parse(storedTransactions));\n    }\n  }, []);\n\n  // Save products to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem('products', JSON.stringify(products));\n  }, [products]);\n\n  // Save transactions to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem('transactions', JSON.stringify(transactions));\n  }, [transactions]);\n\n  // Add new product\n  const addProduct = product => {\n    setProducts([...products, product]);\n  };\n\n  // Add stock transaction\n  const addStockTransaction = transaction => {\n    setTransactions([...transactions, transaction]);\n    const productIndex = products.findIndex(p => p.id === transaction.productId);\n    const updatedProducts = [...products];\n    if (transaction.type === 'add') {\n      updatedProducts[productIndex].quantity += transaction.quantity;\n    } else {\n      updatedProducts[productIndex].quantity -= transaction.quantity;\n    }\n    setProducts(updatedProducts);\n  };\n  return /*#__PURE__*/_jsxDEV(InventoryContext.Provider, {\n    value: {\n      products,\n      transactions,\n      addProduct,\n      addStockTransaction\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(InventoryProvider, \"3ayYebbPPDWtOfETxIaUwuET1Ys=\");\n_c = InventoryProvider;\nvar _c;\n$RefreshReg$(_c, \"InventoryProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","InventoryContext","InventoryProvider","children","_s","products","setProducts","transactions","setTransactions","storedProducts","localStorage","getItem","JSON","parse","storedTransactions","setItem","stringify","addProduct","product","addStockTransaction","transaction","productIndex","findIndex","p","id","productId","updatedProducts","type","quantity","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Khahli/Desktop/wings-cafe-inventory/src/context/InventoryContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nexport const InventoryContext = createContext();\n\nexport const InventoryProvider = ({ children }) => {\n  const [products, setProducts] = useState([]);\n  const [transactions, setTransactions] = useState([]);\n\n  // Load products from localStorage on initial load\n  useEffect(() => {\n    const storedProducts = localStorage.getItem('products');\n    if (storedProducts) {\n      setProducts(JSON.parse(storedProducts));\n    }\n    const storedTransactions = localStorage.getItem('transactions');\n    if (storedTransactions) {\n      setTransactions(JSON.parse(storedTransactions));\n    }\n  }, []);\n\n  // Save products to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem('products', JSON.stringify(products));\n  }, [products]);\n\n  // Save transactions to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem('transactions', JSON.stringify(transactions));\n  }, [transactions]);\n\n  // Add new product\n  const addProduct = (product) => {\n    setProducts([...products, product]);\n  };\n\n  // Add stock transaction\n  const addStockTransaction = (transaction) => {\n    setTransactions([...transactions, transaction]);\n    const productIndex = products.findIndex(p => p.id === transaction.productId);\n    const updatedProducts = [...products];\n    if (transaction.type === 'add') {\n      updatedProducts[productIndex].quantity += transaction.quantity;\n    } else {\n      updatedProducts[productIndex].quantity -= transaction.quantity;\n    }\n    setProducts(updatedProducts);\n  };\n\n  return (\n    <InventoryContext.Provider value={{ products, transactions, addProduct, addStockTransaction }}>\n      {children}\n    </InventoryContext.Provider>\n  );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,gBAAgB,gBAAGL,aAAa,CAAC,CAAC;AAE/C,OAAO,MAAMM,iBAAiB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAEpD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMW,cAAc,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACvD,IAAIF,cAAc,EAAE;MAClBH,WAAW,CAACM,IAAI,CAACC,KAAK,CAACJ,cAAc,CAAC,CAAC;IACzC;IACA,MAAMK,kBAAkB,GAAGJ,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAC/D,IAAIG,kBAAkB,EAAE;MACtBN,eAAe,CAACI,IAAI,CAACC,KAAK,CAACC,kBAAkB,CAAC,CAAC;IACjD;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAhB,SAAS,CAAC,MAAM;IACdY,YAAY,CAACK,OAAO,CAAC,UAAU,EAAEH,IAAI,CAACI,SAAS,CAACX,QAAQ,CAAC,CAAC;EAC5D,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;;EAEd;EACAP,SAAS,CAAC,MAAM;IACdY,YAAY,CAACK,OAAO,CAAC,cAAc,EAAEH,IAAI,CAACI,SAAS,CAACT,YAAY,CAAC,CAAC;EACpE,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;;EAElB;EACA,MAAMU,UAAU,GAAIC,OAAO,IAAK;IAC9BZ,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEa,OAAO,CAAC,CAAC;EACrC,CAAC;;EAED;EACA,MAAMC,mBAAmB,GAAIC,WAAW,IAAK;IAC3CZ,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAEa,WAAW,CAAC,CAAC;IAC/C,MAAMC,YAAY,GAAGhB,QAAQ,CAACiB,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKJ,WAAW,CAACK,SAAS,CAAC;IAC5E,MAAMC,eAAe,GAAG,CAAC,GAAGrB,QAAQ,CAAC;IACrC,IAAIe,WAAW,CAACO,IAAI,KAAK,KAAK,EAAE;MAC9BD,eAAe,CAACL,YAAY,CAAC,CAACO,QAAQ,IAAIR,WAAW,CAACQ,QAAQ;IAChE,CAAC,MAAM;MACLF,eAAe,CAACL,YAAY,CAAC,CAACO,QAAQ,IAAIR,WAAW,CAACQ,QAAQ;IAChE;IACAtB,WAAW,CAACoB,eAAe,CAAC;EAC9B,CAAC;EAED,oBACE1B,OAAA,CAACC,gBAAgB,CAAC4B,QAAQ;IAACC,KAAK,EAAE;MAAEzB,QAAQ;MAAEE,YAAY;MAAEU,UAAU;MAAEE;IAAoB,CAAE;IAAAhB,QAAA,EAC3FA;EAAQ;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAEhC,CAAC;AAAC9B,EAAA,CAjDWF,iBAAiB;AAAAiC,EAAA,GAAjBjC,iBAAiB;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}