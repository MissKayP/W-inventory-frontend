{"ast":null,"code":"var _jsxFileName = \"/Users/Khahli/Desktop/wings-cafe-inventory/src/context/InventoryContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InventoryContext = /*#__PURE__*/createContext();\nexport const InventoryProvider = ({\n  children\n}) => {\n  _s();\n  const [products, setProducts] = useState([{\n    id: '1',\n    name: 'Product A',\n    quantity: 20\n  }, {\n    id: '2',\n    name: 'Product B',\n    quantity: 5\n  }]);\n  const [transactions, setTransactions] = useState([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const loginUser = () => setIsAuthenticated(true);\n  const logoutUser = () => setIsAuthenticated(false);\n  const addStockTransaction = ({\n    productId,\n    quantity,\n    type\n  }) => {\n    const updatedProducts = products.map(product => {\n      if (product.id === productId) {\n        const newQuantity = type === 'add' ? product.quantity + quantity : Math.max(product.quantity - quantity, 0);\n        return {\n          ...product,\n          quantity: newQuantity\n        };\n      }\n      return product;\n    });\n    setProducts(updatedProducts);\n    const newTransaction = {\n      productId,\n      quantity,\n      type,\n      date: new Date().toLocaleString()\n    };\n    setTransactions(prevTransactions => [...prevTransactions, newTransaction]);\n  };\n  return /*#__PURE__*/_jsxDEV(InventoryContext.Provider, {\n    value: {\n      products,\n      transactions,\n      isAuthenticated,\n      loginUser,\n      logoutUser,\n      addStockTransaction\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(InventoryProvider, \"tmfmlWx+WxDR3sBuEw8UipdrSa0=\");\n_c = InventoryProvider;\nexport const useInventory = () => {\n  _s2();\n  return useContext(InventoryContext);\n};\n_s2(useInventory, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"InventoryProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","InventoryContext","InventoryProvider","children","_s","products","setProducts","id","name","quantity","transactions","setTransactions","isAuthenticated","setIsAuthenticated","loginUser","logoutUser","addStockTransaction","productId","type","updatedProducts","map","product","newQuantity","Math","max","newTransaction","date","Date","toLocaleString","prevTransactions","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useInventory","_s2","$RefreshReg$"],"sources":["/Users/Khahli/Desktop/wings-cafe-inventory/src/context/InventoryContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nexport const InventoryContext = createContext();\n\nexport const InventoryProvider = ({ children }) => {\n  const [products, setProducts] = useState([\n    { id: '1', name: 'Product A', quantity: 20 },\n    { id: '2', name: 'Product B', quantity: 5 },\n  ]);\n\n  const [transactions, setTransactions] = useState([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const loginUser = () => setIsAuthenticated(true);\n  const logoutUser = () => setIsAuthenticated(false);\n\n  const addStockTransaction = ({ productId, quantity, type }) => {\n    const updatedProducts = products.map((product) => {\n      if (product.id === productId) {\n        const newQuantity = type === 'add'\n          ? product.quantity + quantity\n          : Math.max(product.quantity - quantity, 0);\n        return { ...product, quantity: newQuantity };\n      }\n      return product;\n    });\n    setProducts(updatedProducts);\n\n    const newTransaction = {\n      productId,\n      quantity,\n      type,\n      date: new Date().toLocaleString(),\n    };\n    setTransactions((prevTransactions) => [...prevTransactions, newTransaction]);\n  };\n\n  return (\n    <InventoryContext.Provider\n      value={{\n        products,\n        transactions,\n        isAuthenticated,\n        loginUser,\n        logoutUser,\n        addStockTransaction,\n      }}\n    >\n      {children}\n    </InventoryContext.Provider>\n  );\n};\n\nexport const useInventory = () => useContext(InventoryContext);"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,OAAO,MAAMC,gBAAgB,gBAAGL,aAAa,CAAC,CAAC;AAE/C,OAAO,MAAMM,iBAAiB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,CACvC;IAAES,EAAE,EAAE,GAAG;IAAEC,IAAI,EAAE,WAAW;IAAEC,QAAQ,EAAE;EAAG,CAAC,EAC5C;IAAEF,EAAE,EAAE,GAAG;IAAEC,IAAI,EAAE,WAAW;IAAEC,QAAQ,EAAE;EAAE,CAAC,CAC5C,CAAC;EAEF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMgB,SAAS,GAAGA,CAAA,KAAMD,kBAAkB,CAAC,IAAI,CAAC;EAChD,MAAME,UAAU,GAAGA,CAAA,KAAMF,kBAAkB,CAAC,KAAK,CAAC;EAElD,MAAMG,mBAAmB,GAAGA,CAAC;IAAEC,SAAS;IAAER,QAAQ;IAAES;EAAK,CAAC,KAAK;IAC7D,MAAMC,eAAe,GAAGd,QAAQ,CAACe,GAAG,CAAEC,OAAO,IAAK;MAChD,IAAIA,OAAO,CAACd,EAAE,KAAKU,SAAS,EAAE;QAC5B,MAAMK,WAAW,GAAGJ,IAAI,KAAK,KAAK,GAC9BG,OAAO,CAACZ,QAAQ,GAAGA,QAAQ,GAC3Bc,IAAI,CAACC,GAAG,CAACH,OAAO,CAACZ,QAAQ,GAAGA,QAAQ,EAAE,CAAC,CAAC;QAC5C,OAAO;UAAE,GAAGY,OAAO;UAAEZ,QAAQ,EAAEa;QAAY,CAAC;MAC9C;MACA,OAAOD,OAAO;IAChB,CAAC,CAAC;IACFf,WAAW,CAACa,eAAe,CAAC;IAE5B,MAAMM,cAAc,GAAG;MACrBR,SAAS;MACTR,QAAQ;MACRS,IAAI;MACJQ,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,cAAc,CAAC;IAClC,CAAC;IACDjB,eAAe,CAAEkB,gBAAgB,IAAK,CAAC,GAAGA,gBAAgB,EAAEJ,cAAc,CAAC,CAAC;EAC9E,CAAC;EAED,oBACEzB,OAAA,CAACC,gBAAgB,CAAC6B,QAAQ;IACxBC,KAAK,EAAE;MACL1B,QAAQ;MACRK,YAAY;MACZE,eAAe;MACfE,SAAS;MACTC,UAAU;MACVC;IACF,CAAE;IAAAb,QAAA,EAEDA;EAAQ;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAEhC,CAAC;AAAC/B,EAAA,CA/CWF,iBAAiB;AAAAkC,EAAA,GAAjBlC,iBAAiB;AAiD9B,OAAO,MAAMmC,YAAY,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMzC,UAAU,CAACI,gBAAgB,CAAC;AAAA;AAACqC,GAAA,CAAlDD,YAAY;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}