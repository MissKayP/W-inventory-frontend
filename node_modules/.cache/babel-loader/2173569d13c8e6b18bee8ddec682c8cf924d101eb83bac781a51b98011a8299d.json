{"ast":null,"code":"var _jsxFileName = \"/Users/Khahli/Desktop/wings-cafe-inventory/src/context/InventoryContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\n\n// Create InventoryContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InventoryContext = /*#__PURE__*/createContext();\n\n// InventoryProvider to wrap the app and manage products and transactions\nexport const InventoryProvider = ({\n  children\n}) => {\n  _s();\n  const [products, setProducts] = useState([{\n    id: '1',\n    name: 'Product 1',\n    quantity: 10\n  }, {\n    id: '2',\n    name: 'Product 2',\n    quantity: 20\n  }]);\n  const [transactions, setTransactions] = useState([]);\n\n  // Manage authentication state\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const loginUser = () => {\n    setIsAuthenticated(true); // Set user as logged in\n  };\n  const logoutUser = () => {\n    setIsAuthenticated(false); // Set user as logged out\n  };\n  const addStockTransaction = ({\n    productId,\n    quantity,\n    type,\n    date\n  }) => {\n    setTransactions(prevTransactions => [...prevTransactions, {\n      productId,\n      quantity,\n      type,\n      date\n    }]);\n    setProducts(prevProducts => prevProducts.map(product => product.id === productId ? {\n      ...product,\n      quantity: type === 'add' ? product.quantity + quantity : product.quantity - quantity\n    } : product));\n  };\n  return /*#__PURE__*/_jsxDEV(InventoryContext.Provider, {\n    value: {\n      products,\n      transactions,\n      addStockTransaction,\n      loginUser,\n      logoutUser,\n      isAuthenticated\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(InventoryProvider, \"T+TP9FZXtBfbB2ZbZ0Tuo6xnbAA=\");\n_c = InventoryProvider;\nexport const useInventory = () => {\n  _s2();\n  return useContext(InventoryContext);\n};\n_s2(useInventory, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"InventoryProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","InventoryContext","InventoryProvider","children","_s","products","setProducts","id","name","quantity","transactions","setTransactions","isAuthenticated","setIsAuthenticated","loginUser","logoutUser","addStockTransaction","productId","type","date","prevTransactions","prevProducts","map","product","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useInventory","_s2","$RefreshReg$"],"sources":["/Users/Khahli/Desktop/wings-cafe-inventory/src/context/InventoryContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\n// Create InventoryContext\nexport const InventoryContext = createContext();\n\n// InventoryProvider to wrap the app and manage products and transactions\nexport const InventoryProvider = ({ children }) => {\n  const [products, setProducts] = useState([\n    { id: '1', name: 'Product 1', quantity: 10 },\n    { id: '2', name: 'Product 2', quantity: 20 },\n  ]);\n  const [transactions, setTransactions] = useState([]);\n\n  // Manage authentication state\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const loginUser = () => {\n    setIsAuthenticated(true); // Set user as logged in\n  };\n\n  const logoutUser = () => {\n    setIsAuthenticated(false); // Set user as logged out\n  };\n\n  const addStockTransaction = ({ productId, quantity, type, date }) => {\n    setTransactions((prevTransactions) => [\n      ...prevTransactions,\n      { productId, quantity, type, date },\n    ]);\n\n    setProducts((prevProducts) =>\n      prevProducts.map((product) =>\n        product.id === productId\n          ? {\n              ...product,\n              quantity:\n                type === 'add'\n                  ? product.quantity + quantity\n                  : product.quantity - quantity,\n            }\n          : product\n      )\n    );\n  };\n\n  return (\n    <InventoryContext.Provider\n      value={{\n        products,\n        transactions,\n        addStockTransaction,\n        loginUser,\n        logoutUser,\n        isAuthenticated,\n      }}\n    >\n      {children}\n    </InventoryContext.Provider>\n  );\n};\n\nexport const useInventory = () => useContext(InventoryContext);"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,gBAAgB,gBAAGL,aAAa,CAAC,CAAC;;AAE/C;AACA,OAAO,MAAMM,iBAAiB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,CACvC;IAAES,EAAE,EAAE,GAAG;IAAEC,IAAI,EAAE,WAAW;IAAEC,QAAQ,EAAE;EAAG,CAAC,EAC5C;IAAEF,EAAE,EAAE,GAAG;IAAEC,IAAI,EAAE,WAAW;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAC7C,CAAC;EACF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;;EAEpD;EACA,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMgB,SAAS,GAAGA,CAAA,KAAM;IACtBD,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAME,UAAU,GAAGA,CAAA,KAAM;IACvBF,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;EAC7B,CAAC;EAED,MAAMG,mBAAmB,GAAGA,CAAC;IAAEC,SAAS;IAAER,QAAQ;IAAES,IAAI;IAAEC;EAAK,CAAC,KAAK;IACnER,eAAe,CAAES,gBAAgB,IAAK,CACpC,GAAGA,gBAAgB,EACnB;MAAEH,SAAS;MAAER,QAAQ;MAAES,IAAI;MAAEC;IAAK,CAAC,CACpC,CAAC;IAEFb,WAAW,CAAEe,YAAY,IACvBA,YAAY,CAACC,GAAG,CAAEC,OAAO,IACvBA,OAAO,CAAChB,EAAE,KAAKU,SAAS,GACpB;MACE,GAAGM,OAAO;MACVd,QAAQ,EACNS,IAAI,KAAK,KAAK,GACVK,OAAO,CAACd,QAAQ,GAAGA,QAAQ,GAC3Bc,OAAO,CAACd,QAAQ,GAAGA;IAC3B,CAAC,GACDc,OACN,CACF,CAAC;EACH,CAAC;EAED,oBACEvB,OAAA,CAACC,gBAAgB,CAACuB,QAAQ;IACxBC,KAAK,EAAE;MACLpB,QAAQ;MACRK,YAAY;MACZM,mBAAmB;MACnBF,SAAS;MACTC,UAAU;MACVH;IACF,CAAE;IAAAT,QAAA,EAEDA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAEhC,CAAC;AAACzB,EAAA,CArDWF,iBAAiB;AAAA4B,EAAA,GAAjB5B,iBAAiB;AAuD9B,OAAO,MAAM6B,YAAY,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMnC,UAAU,CAACI,gBAAgB,CAAC;AAAA;AAAC+B,GAAA,CAAlDD,YAAY;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}