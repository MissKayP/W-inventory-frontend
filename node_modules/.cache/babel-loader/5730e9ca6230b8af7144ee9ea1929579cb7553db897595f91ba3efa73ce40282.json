{"ast":null,"code":"var _jsxFileName = \"/Users/Khahli/Desktop/wings-cafe-inventory/src/context/InventoryContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InventoryContext = /*#__PURE__*/createContext();\nexport const InventoryProvider = ({\n  children\n}) => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [transactions, setTransactions] = useState([]); // Store transactions here\n  const [isAuthenticated, setIsAuthenticated] = useState(false); // Authentication state\n\n  const addProduct = product => {\n    setProducts([...products, product]);\n  };\n  const updateProduct = updatedProduct => {\n    setProducts(products.map(product => product.id === updatedProduct.id ? updatedProduct : product));\n  };\n  const deleteProduct = id => {\n    setProducts(products.filter(product => product.id !== id));\n  };\n  const addStockTransaction = transaction => {\n    setTransactions([...transactions, transaction]); // Add transaction to the list\n    // Update product stock based on the transaction type\n    const productIndex = products.findIndex(product => product.id === transaction.productId);\n    if (productIndex !== -1) {\n      const product = products[productIndex];\n      const updatedQuantity = transaction.type === 'add' ? product.quantity + parseInt(transaction.quantity, 10) : product.quantity - parseInt(transaction.quantity, 10);\n      updateProduct({\n        ...product,\n        quantity: updatedQuantity\n      }); // Update the product stock\n    }\n  };\n  const loginUser = () => {\n    setIsAuthenticated(true); // Simulate user login\n  };\n  const logoutUser = () => {\n    setIsAuthenticated(false); // Simulate user logout\n  };\n  return /*#__PURE__*/_jsxDEV(InventoryContext.Provider, {\n    value: {\n      products,\n      addProduct,\n      updateProduct,\n      deleteProduct,\n      transactions,\n      addStockTransaction,\n      isAuthenticated,\n      loginUser,\n      logoutUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(InventoryProvider, \"f/dQBir2E3tEJwr5mvdTb8FnQQ0=\");\n_c = InventoryProvider;\nvar _c;\n$RefreshReg$(_c, \"InventoryProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","InventoryContext","InventoryProvider","children","_s","products","setProducts","transactions","setTransactions","isAuthenticated","setIsAuthenticated","addProduct","product","updateProduct","updatedProduct","map","id","deleteProduct","filter","addStockTransaction","transaction","productIndex","findIndex","productId","updatedQuantity","type","quantity","parseInt","loginUser","logoutUser","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Khahli/Desktop/wings-cafe-inventory/src/context/InventoryContext.js"],"sourcesContent":["import React, { createContext, useState } from 'react';\n\nexport const InventoryContext = createContext();\n\nexport const InventoryProvider = ({ children }) => {\n  const [products, setProducts] = useState([]);\n  const [transactions, setTransactions] = useState([]); // Store transactions here\n  const [isAuthenticated, setIsAuthenticated] = useState(false); // Authentication state\n\n  const addProduct = (product) => {\n    setProducts([...products, product]);\n  };\n\n  const updateProduct = (updatedProduct) => {\n    setProducts(products.map(product => product.id === updatedProduct.id ? updatedProduct : product));\n  };\n\n  const deleteProduct = (id) => {\n    setProducts(products.filter(product => product.id !== id));\n  };\n\n  const addStockTransaction = (transaction) => {\n    setTransactions([...transactions, transaction]); // Add transaction to the list\n    // Update product stock based on the transaction type\n    const productIndex = products.findIndex(product => product.id === transaction.productId);\n    if (productIndex !== -1) {\n      const product = products[productIndex];\n      const updatedQuantity = transaction.type === 'add' \n        ? product.quantity + parseInt(transaction.quantity, 10) \n        : product.quantity - parseInt(transaction.quantity, 10);\n      updateProduct({ ...product, quantity: updatedQuantity }); // Update the product stock\n    }\n  };\n\n  const loginUser = () => {\n    setIsAuthenticated(true); // Simulate user login\n  };\n\n  const logoutUser = () => {\n    setIsAuthenticated(false); // Simulate user logout\n  };\n\n  return (\n    <InventoryContext.Provider value={{ \n      products, addProduct, updateProduct, deleteProduct,\n      transactions, addStockTransaction, \n      isAuthenticated, loginUser, logoutUser \n    }}>\n      {children}\n    </InventoryContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,OAAO,MAAMC,gBAAgB,gBAAGJ,aAAa,CAAC,CAAC;AAE/C,OAAO,MAAMK,iBAAiB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtD,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE/D,MAAMa,UAAU,GAAIC,OAAO,IAAK;IAC9BN,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEO,OAAO,CAAC,CAAC;EACrC,CAAC;EAED,MAAMC,aAAa,GAAIC,cAAc,IAAK;IACxCR,WAAW,CAACD,QAAQ,CAACU,GAAG,CAACH,OAAO,IAAIA,OAAO,CAACI,EAAE,KAAKF,cAAc,CAACE,EAAE,GAAGF,cAAc,GAAGF,OAAO,CAAC,CAAC;EACnG,CAAC;EAED,MAAMK,aAAa,GAAID,EAAE,IAAK;IAC5BV,WAAW,CAACD,QAAQ,CAACa,MAAM,CAACN,OAAO,IAAIA,OAAO,CAACI,EAAE,KAAKA,EAAE,CAAC,CAAC;EAC5D,CAAC;EAED,MAAMG,mBAAmB,GAAIC,WAAW,IAAK;IAC3CZ,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAEa,WAAW,CAAC,CAAC,CAAC,CAAC;IACjD;IACA,MAAMC,YAAY,GAAGhB,QAAQ,CAACiB,SAAS,CAACV,OAAO,IAAIA,OAAO,CAACI,EAAE,KAAKI,WAAW,CAACG,SAAS,CAAC;IACxF,IAAIF,YAAY,KAAK,CAAC,CAAC,EAAE;MACvB,MAAMT,OAAO,GAAGP,QAAQ,CAACgB,YAAY,CAAC;MACtC,MAAMG,eAAe,GAAGJ,WAAW,CAACK,IAAI,KAAK,KAAK,GAC9Cb,OAAO,CAACc,QAAQ,GAAGC,QAAQ,CAACP,WAAW,CAACM,QAAQ,EAAE,EAAE,CAAC,GACrDd,OAAO,CAACc,QAAQ,GAAGC,QAAQ,CAACP,WAAW,CAACM,QAAQ,EAAE,EAAE,CAAC;MACzDb,aAAa,CAAC;QAAE,GAAGD,OAAO;QAAEc,QAAQ,EAAEF;MAAgB,CAAC,CAAC,CAAC,CAAC;IAC5D;EACF,CAAC;EAED,MAAMI,SAAS,GAAGA,CAAA,KAAM;IACtBlB,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMmB,UAAU,GAAGA,CAAA,KAAM;IACvBnB,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;EAC7B,CAAC;EAED,oBACEV,OAAA,CAACC,gBAAgB,CAAC6B,QAAQ;IAACC,KAAK,EAAE;MAChC1B,QAAQ;MAAEM,UAAU;MAAEE,aAAa;MAAEI,aAAa;MAClDV,YAAY;MAAEY,mBAAmB;MACjCV,eAAe;MAAEmB,SAAS;MAAEC;IAC9B,CAAE;IAAA1B,QAAA,EACCA;EAAQ;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAEhC,CAAC;AAAC/B,EAAA,CA/CWF,iBAAiB;AAAAkC,EAAA,GAAjBlC,iBAAiB;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}