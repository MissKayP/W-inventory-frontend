{"ast":null,"code":"var _jsxFileName = \"/Users/Khahli/Desktop/wings-cafe-inventory/src/components/StockManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StockManagement = () => {\n  _s();\n  // Initialize transactions to an empty array\n  const [transactions, setTransactions] = useState([]);\n  const [loading, setLoading] = useState(true); // State to manage loading status\n  const [error, setError] = useState(null); // State to manage errors\n\n  useEffect(() => {\n    const fetchTransactions = async () => {\n      try {\n        const response = await fetch('/api/transactions'); // Adjust the API endpoint as necessary\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setTransactions(data); // Set transactions from the fetched data\n      } catch (error) {\n        console.error('Error fetching transactions:', error);\n        setError(error.message); // Set error message\n      } finally {\n        setLoading(false); // Set loading to false after the fetch is complete\n      }\n    };\n    fetchTransactions();\n  }, []); // Empty dependency array means this runs once on mount\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading transactions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this); // Loading state\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this); // Error handling\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Stock Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: transactions.map((transaction, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Transaction ID: \", transaction.id, \", Amount: \", transaction.amount]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(StockManagement, \"5jbk8HdePT8SHyzZX04TAttKX7Q=\");\n_c = StockManagement;\nexport default StockManagement;\nvar _c;\n$RefreshReg$(_c, \"StockManagement\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","StockManagement","_s","transactions","setTransactions","loading","setLoading","error","setError","fetchTransactions","response","fetch","ok","Error","data","json","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","map","transaction","index","id","amount","_c","$RefreshReg$"],"sources":["/Users/Khahli/Desktop/wings-cafe-inventory/src/components/StockManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst StockManagement = () => {\n    // Initialize transactions to an empty array\n    const [transactions, setTransactions] = useState([]);\n    const [loading, setLoading] = useState(true); // State to manage loading status\n    const [error, setError] = useState(null); // State to manage errors\n\n    useEffect(() => {\n        const fetchTransactions = async () => {\n            try {\n                const response = await fetch('/api/transactions'); // Adjust the API endpoint as necessary\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                const data = await response.json();\n                setTransactions(data); // Set transactions from the fetched data\n            } catch (error) {\n                console.error('Error fetching transactions:', error);\n                setError(error.message); // Set error message\n            } finally {\n                setLoading(false); // Set loading to false after the fetch is complete\n            }\n        };\n\n        fetchTransactions();\n    }, []); // Empty dependency array means this runs once on mount\n\n    if (loading) {\n        return <div>Loading transactions...</div>; // Loading state\n    }\n\n    if (error) {\n        return <div>Error: {error}</div>; // Error handling\n    }\n\n    return (\n        <div>\n            <h1>Stock Management</h1>\n            <ul>\n                {transactions.map((transaction, index) => (\n                    <li key={index}>\n                        {/* Customize this to display transaction details */}\n                        Transaction ID: {transaction.id}, Amount: {transaction.amount}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default StockManagement;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1CC,SAAS,CAAC,MAAM;IACZ,MAAMW,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mBAAmB,CAAC,CAAC,CAAC;QACnD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAClD;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCX,eAAe,CAACU,IAAI,CAAC,CAAC,CAAC;MAC3B,CAAC,CAAC,OAAOP,KAAK,EAAE;QACZS,OAAO,CAACT,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpDC,QAAQ,CAACD,KAAK,CAACU,OAAO,CAAC,CAAC,CAAC;MAC7B,CAAC,SAAS;QACNX,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACvB;IACJ,CAAC;IAEDG,iBAAiB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,IAAIJ,OAAO,EAAE;IACT,oBAAOL,OAAA;MAAAkB,QAAA,EAAK;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAC/C;EAEA,IAAIf,KAAK,EAAE;IACP,oBAAOP,OAAA;MAAAkB,QAAA,GAAK,SAAO,EAACX,KAAK;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,CAAC,CAAC;EACtC;EAEA,oBACItB,OAAA;IAAAkB,QAAA,gBACIlB,OAAA;MAAAkB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBtB,OAAA;MAAAkB,QAAA,EACKf,YAAY,CAACoB,GAAG,CAAC,CAACC,WAAW,EAAEC,KAAK,kBACjCzB,OAAA;QAAAkB,QAAA,GACyD,kBACrC,EAACM,WAAW,CAACE,EAAE,EAAC,YAAU,EAACF,WAAW,CAACG,MAAM;MAAA,GAFxDF,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACpB,EAAA,CA/CID,eAAe;AAAA2B,EAAA,GAAf3B,eAAe;AAiDrB,eAAeA,eAAe;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}