{"ast":null,"code":"var _jsxFileName = \"/Users/Khahli/Desktop/wings-cafe-inventory/src/context/InventoryContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\n\n// Create context for inventory management\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InventoryContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the InventoryContext\nexport const useInventory = () => {\n  _s();\n  return useContext(InventoryContext);\n};\n\n// Provider component\n_s(useInventory, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const InventoryProvider = ({\n  children\n}) => {\n  _s2();\n  const loadProductsFromStorage = () => {\n    const storedProducts = localStorage.getItem('products');\n    return storedProducts ? JSON.parse(storedProducts) : [];\n  };\n  const loadUsersFromStorage = () => {\n    const storedUsers = localStorage.getItem('users');\n    return storedUsers ? JSON.parse(storedUsers) : [];\n  };\n  const loadAuthenticationStatus = () => {\n    const storedAuth = localStorage.getItem('isAuthenticated');\n    return storedAuth === 'true'; // Convert from string to boolean\n  };\n\n  // State initialization\n  const [isAuthenticated, setIsAuthenticated] = useState(loadAuthenticationStatus());\n  const [products, setProducts] = useState(loadProductsFromStorage());\n  const [users, setUsers] = useState(loadUsersFromStorage());\n\n  // User authentication functions\n  const registerUser = user => {\n    setUsers(prev => {\n      const updatedUsers = [...prev, user];\n      localStorage.setItem('users', JSON.stringify(updatedUsers)); // Save to localStorage\n      return updatedUsers;\n    });\n  };\n  const loginUser = (username, password) => {\n    const foundUser = users.find(user => user.username === username && user.password === password);\n    if (foundUser) {\n      setIsAuthenticated(true);\n      localStorage.setItem('isAuthenticated', 'true'); // Save authentication status\n    } else {\n      alert('Invalid credentials');\n    }\n  };\n  const logoutUser = () => {\n    setIsAuthenticated(false);\n    localStorage.setItem('isAuthenticated', 'false');\n  };\n\n  // Product management functions\n  const addProduct = product => {\n    setProducts(prev => {\n      const updatedProducts = [...prev, product];\n      localStorage.setItem('products', JSON.stringify(updatedProducts)); // Save to localStorage\n      return updatedProducts;\n    });\n  };\n  const updateProduct = updatedProduct => {\n    setProducts(prev => {\n      const updatedProducts = prev.map(product => product.id === updatedProduct.id ? updatedProduct : product);\n      localStorage.setItem('products', JSON.stringify(updatedProducts));\n      return updatedProducts;\n    });\n  };\n  const deleteProduct = id => {\n    setProducts(prev => {\n      const updatedProducts = prev.filter(product => product.id !== id);\n      localStorage.setItem('products', JSON.stringify(updatedProducts));\n      return updatedProducts;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(InventoryContext.Provider, {\n    value: {\n      isAuthenticated,\n      loginUser,\n      logoutUser,\n      registerUser,\n      products,\n      addProduct,\n      updateProduct,\n      deleteProduct,\n      users\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s2(InventoryProvider, \"2AAVQ9c+Clk3t1Wiz57YTzR+8Pw=\");\n_c = InventoryProvider;\nvar _c;\n$RefreshReg$(_c, \"InventoryProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","InventoryContext","useInventory","_s","InventoryProvider","children","_s2","loadProductsFromStorage","storedProducts","localStorage","getItem","JSON","parse","loadUsersFromStorage","storedUsers","loadAuthenticationStatus","storedAuth","isAuthenticated","setIsAuthenticated","products","setProducts","users","setUsers","registerUser","user","prev","updatedUsers","setItem","stringify","loginUser","username","password","foundUser","find","alert","logoutUser","addProduct","product","updatedProducts","updateProduct","updatedProduct","map","id","deleteProduct","filter","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Khahli/Desktop/wings-cafe-inventory/src/context/InventoryContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\n\n// Create context for inventory management\nexport const InventoryContext = createContext();\n\n// Custom hook to use the InventoryContext\nexport const useInventory = () => {\n  return useContext(InventoryContext);\n};\n\n// Provider component\nexport const InventoryProvider = ({ children }) => {\n  const loadProductsFromStorage = () => {\n    const storedProducts = localStorage.getItem('products');\n    return storedProducts ? JSON.parse(storedProducts) : [];\n  };\n\n  const loadUsersFromStorage = () => {\n    const storedUsers = localStorage.getItem('users');\n    return storedUsers ? JSON.parse(storedUsers) : [];\n  };\n\n  const loadAuthenticationStatus = () => {\n    const storedAuth = localStorage.getItem('isAuthenticated');\n    return storedAuth === 'true'; // Convert from string to boolean\n  };\n\n  // State initialization\n  const [isAuthenticated, setIsAuthenticated] = useState(loadAuthenticationStatus());\n  const [products, setProducts] = useState(loadProductsFromStorage());\n  const [users, setUsers] = useState(loadUsersFromStorage());\n\n  // User authentication functions\n  const registerUser = (user) => {\n    setUsers((prev) => {\n      const updatedUsers = [...prev, user];\n      localStorage.setItem('users', JSON.stringify(updatedUsers)); // Save to localStorage\n      return updatedUsers;\n    });\n  };\n\n  const loginUser = (username, password) => {\n    const foundUser = users.find(\n      (user) => user.username === username && user.password === password\n    );\n    if (foundUser) {\n      setIsAuthenticated(true);\n      localStorage.setItem('isAuthenticated', 'true'); // Save authentication status\n    } else {\n      alert('Invalid credentials');\n    }\n  };\n\n  const logoutUser = () => {\n    setIsAuthenticated(false);\n    localStorage.setItem('isAuthenticated', 'false');\n  };\n\n  // Product management functions\n  const addProduct = (product) => {\n    setProducts((prev) => {\n      const updatedProducts = [...prev, product];\n      localStorage.setItem('products', JSON.stringify(updatedProducts)); // Save to localStorage\n      return updatedProducts;\n    });\n  };\n\n  const updateProduct = (updatedProduct) => {\n    setProducts((prev) => {\n      const updatedProducts = prev.map((product) =>\n        product.id === updatedProduct.id ? updatedProduct : product\n      );\n      localStorage.setItem('products', JSON.stringify(updatedProducts));\n      return updatedProducts;\n    });\n  };\n\n  const deleteProduct = (id) => {\n    setProducts((prev) => {\n      const updatedProducts = prev.filter((product) => product.id !== id);\n      localStorage.setItem('products', JSON.stringify(updatedProducts));\n      return updatedProducts;\n    });\n  };\n\n  return (\n    <InventoryContext.Provider\n      value={{\n        isAuthenticated,\n        loginUser,\n        logoutUser,\n        registerUser,\n        products,\n        addProduct,\n        updateProduct,\n        deleteProduct,\n        users,\n      }}\n    >\n      {children}\n    </InventoryContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}