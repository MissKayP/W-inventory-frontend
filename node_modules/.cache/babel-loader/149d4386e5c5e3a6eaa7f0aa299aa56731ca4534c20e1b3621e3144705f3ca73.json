{"ast":null,"code":"var _jsxFileName = \"/Users/Khahli/Desktop/wings-cafe-inventory/src/context/InventoryContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\n\n// Create context for inventory management\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InventoryContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the InventoryContext\nexport const useInventory = () => {\n  _s();\n  return useContext(InventoryContext);\n};\n\n// Provider component\n_s(useInventory, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const InventoryProvider = ({\n  children\n}) => {\n  _s2();\n  const loadProductsFromStorage = () => {\n    const storedProducts = localStorage.getItem('products');\n    return storedProducts ? JSON.parse(storedProducts) : [];\n  };\n  const loadAuthenticationStatus = () => {\n    const storedAuth = localStorage.getItem('isAuthenticated');\n    return storedAuth === 'true'; // Convert from string to boolean\n  };\n\n  // State initialization\n  const [isAuthenticated, setIsAuthenticated] = useState(loadAuthenticationStatus());\n  const [products, setProducts] = useState(loadProductsFromStorage());\n  const [users, setUsers] = useState([]); // You can also persist users if needed.\n\n  // User authentication functions\n  const loginUser = () => {\n    setIsAuthenticated(true);\n    localStorage.setItem('isAuthenticated', 'true'); // Save authentication state\n  };\n  const logoutUser = () => {\n    setIsAuthenticated(false);\n    localStorage.setItem('isAuthenticated', 'false'); // Save authentication state\n  };\n  const registerUser = newUser => {\n    const userExists = users.some(user => user.username === newUser.username);\n    if (!userExists) {\n      setUsers(prevUsers => [...prevUsers, newUser]);\n      return true; // Registration successful\n    }\n    return false; // Username already exists\n  };\n  // Product management functions\n  const addProduct = product => {\n    setProducts(prev => {\n      const updatedProducts = [...prev, product];\n      localStorage.setItem('products', JSON.stringify(updatedProducts)); // Save to localStorage\n      return updatedProducts;\n    });\n  };\n  const updateProduct = updatedProduct => {\n    setProducts(prev => {\n      const updatedProducts = prev.map(product => product.id === updatedProduct.id ? updatedProduct : product);\n      localStorage.setItem('products', JSON.stringify(updatedProducts)); // Save to localStorage\n      return updatedProducts;\n    });\n  };\n  const deleteProduct = id => {\n    setProducts(prev => {\n      const updatedProducts = prev.filter(product => product.id !== id);\n      localStorage.setItem('products', JSON.stringify(updatedProducts)); // Save to localStorage\n      return updatedProducts;\n    });\n  };\n\n  // User management functions\n  const addUser = user => {\n    setUsers(prev => [...prev, user]);\n  };\n  const updateUser = updatedUser => {\n    setUsers(prev => prev.map(user => user.id === updatedUser.id ? updatedUser : user));\n  };\n  const deleteUser = id => {\n    setUsers(prev => prev.filter(user => user.id !== id));\n  };\n\n  // Stock transaction management\n  const addStockTransaction = ({\n    productId,\n    quantity,\n    type\n  }) => {\n    setProducts(prev => prev.map(product => {\n      if (product.id === productId) {\n        const updatedQuantity = type === 'add' ? product.quantity + quantity : product.quantity - quantity;\n\n        // Prevent negative quantities\n        return {\n          ...product,\n          quantity: Math.max(updatedQuantity, 0) // Ensure quantity doesn't go negative\n        };\n      }\n      return product;\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(InventoryContext.Provider, {\n    value: {\n      isAuthenticated,\n      loginUser,\n      logoutUser,\n      products,\n      addProduct,\n      updateProduct,\n      deleteProduct,\n      users,\n      addUser,\n      updateUser,\n      deleteUser,\n      addStockTransaction\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s2(InventoryProvider, \"Qlurqdds59Yjx1gPIcmMCTy9bac=\");\n_c = InventoryProvider;\nvar _c;\n$RefreshReg$(_c, \"InventoryProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","InventoryContext","useInventory","_s","InventoryProvider","children","_s2","loadProductsFromStorage","storedProducts","localStorage","getItem","JSON","parse","loadAuthenticationStatus","storedAuth","isAuthenticated","setIsAuthenticated","products","setProducts","users","setUsers","loginUser","setItem","logoutUser","registerUser","newUser","userExists","some","user","username","prevUsers","addProduct","product","prev","updatedProducts","stringify","updateProduct","updatedProduct","map","id","deleteProduct","filter","addUser","updateUser","updatedUser","deleteUser","addStockTransaction","productId","quantity","type","updatedQuantity","Math","max","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Khahli/Desktop/wings-cafe-inventory/src/context/InventoryContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\n\n// Create context for inventory management\nexport const InventoryContext = createContext();\n\n// Custom hook to use the InventoryContext\nexport const useInventory = () => {\n  return useContext(InventoryContext);\n};\n\n// Provider component\nexport const InventoryProvider = ({ children }) => {\n  const loadProductsFromStorage = () => {\n    const storedProducts = localStorage.getItem('products');\n    return storedProducts ? JSON.parse(storedProducts) : [];\n  };\n\n  const loadAuthenticationStatus = () => {\n    const storedAuth = localStorage.getItem('isAuthenticated');\n    return storedAuth === 'true'; // Convert from string to boolean\n  };\n\n  // State initialization\n  const [isAuthenticated, setIsAuthenticated] = useState(loadAuthenticationStatus());\n  const [products, setProducts] = useState(loadProductsFromStorage());\n  const [users, setUsers] = useState([]); // You can also persist users if needed.\n\n  // User authentication functions\n  const loginUser = () => {\n    setIsAuthenticated(true);\n    localStorage.setItem('isAuthenticated', 'true'); // Save authentication state\n  };\n\n  const logoutUser = () => {\n    setIsAuthenticated(false);\n    localStorage.setItem('isAuthenticated', 'false'); // Save authentication state\n  };\n \n\n  const registerUser = (newUser) => {\n    const userExists = users.some((user) => user.username === newUser.username);\n    if (!userExists) {\n      setUsers((prevUsers) => [...prevUsers, newUser]);\n      return true; // Registration successful\n    }\n    return false; // Username already exists\n  };\n  // Product management functions\n  const addProduct = (product) => {\n    setProducts((prev) => {\n      const updatedProducts = [...prev, product];\n      localStorage.setItem('products', JSON.stringify(updatedProducts)); // Save to localStorage\n      return updatedProducts;\n    });\n  };\n\n  const updateProduct = (updatedProduct) => {\n    setProducts((prev) => {\n      const updatedProducts = prev.map((product) => \n        product.id === updatedProduct.id ? updatedProduct : product\n      );\n      localStorage.setItem('products', JSON.stringify(updatedProducts)); // Save to localStorage\n      return updatedProducts;\n    });\n  };\n\n  const deleteProduct = (id) => {\n    setProducts((prev) => {\n      const updatedProducts = prev.filter((product) => product.id !== id);\n      localStorage.setItem('products', JSON.stringify(updatedProducts)); // Save to localStorage\n      return updatedProducts;\n    });\n  };\n\n  // User management functions\n  const addUser = (user) => {\n    setUsers((prev) => [...prev, user]);\n  };\n\n  const updateUser = (updatedUser) => {\n    setUsers((prev) =>\n      prev.map((user) => (user.id === updatedUser.id ? updatedUser : user))\n    );\n  };\n\n  const deleteUser = (id) => {\n    setUsers((prev) => prev.filter((user) => user.id !== id));\n  };\n\n  // Stock transaction management\n  const addStockTransaction = ({ productId, quantity, type }) => {\n    setProducts((prev) =>\n      prev.map((product) => {\n        if (product.id === productId) {\n          const updatedQuantity = type === 'add' \n            ? product.quantity + quantity \n            : product.quantity - quantity;\n\n          // Prevent negative quantities\n          return {\n            ...product,\n            quantity: Math.max(updatedQuantity, 0), // Ensure quantity doesn't go negative\n          };\n        }\n        return product;\n      })\n    );\n  };\n\n  return (\n    <InventoryContext.Provider\n      value={{\n        isAuthenticated,\n        loginUser,\n        logoutUser,\n        products,\n        addProduct,\n        updateProduct,\n        deleteProduct,\n        users,\n        addUser,\n        updateUser,\n        deleteUser,\n        addStockTransaction,\n      }}\n    >\n      {children}\n    </InventoryContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}