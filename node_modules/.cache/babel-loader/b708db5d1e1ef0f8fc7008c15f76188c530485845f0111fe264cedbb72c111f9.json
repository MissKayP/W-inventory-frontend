{"ast":null,"code":"var _jsxFileName = \"/Users/Khahli/Desktop/wings-cafe-inventory/src/context/InventoryContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\n\n// Create Inventory Context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InventoryContext = /*#__PURE__*/createContext();\n\n// Create a Provider component\nexport const InventoryProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [products, setProducts] = useState([]);\n  const [users, setUsers] = useState([]);\n\n  // Authentication methods\n  const loginUser = () => {\n    setIsAuthenticated(true);\n  };\n  const logoutUser = () => {\n    setIsAuthenticated(false);\n  };\n\n  // Product management methods\n  const addProduct = product => {\n    setProducts(prev => [...prev, product]);\n  };\n  const updateProduct = updatedProduct => {\n    setProducts(prev => prev.map(product => product.id === updatedProduct.id ? updatedProduct : product));\n  };\n  const deleteProduct = id => {\n    setProducts(prev => prev.filter(product => product.id !== id));\n  };\n\n  // User management methods\n  const addUser = user => {\n    setUsers(prev => [...prev, user]);\n  };\n  const updateUser = updatedUser => {\n    setUsers(prev => prev.map(user => user.id === updatedUser.id ? updatedUser : user));\n  };\n  const deleteUser = id => {\n    setUsers(prev => prev.filter(user => user.id !== id));\n  };\n\n  // Stock transaction management\n  const addStockTransaction = ({\n    productId,\n    quantity,\n    type\n  }) => {\n    setProducts(prev => prev.map(product => {\n      if (product.id === productId) {\n        return {\n          ...product,\n          quantity: type === 'add' ? product.quantity + quantity : product.quantity - quantity\n        };\n      }\n      return product;\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(InventoryContext.Provider, {\n    value: {\n      isAuthenticated,\n      loginUser,\n      logoutUser,\n      products,\n      addProduct,\n      updateProduct,\n      deleteProduct,\n      users,\n      addUser,\n      updateUser,\n      deleteUser,\n      addStockTransaction\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n// Create a custom hook for easy access to the Inventory Context\n_s(InventoryProvider, \"PpbaHS+ugT6HLHuvu+Rybh7kiJU=\");\n_c = InventoryProvider;\nexport const useInventory = () => {\n  _s2();\n  return useContext(InventoryContext);\n};\n_s2(useInventory, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"InventoryProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","InventoryContext","InventoryProvider","children","_s","isAuthenticated","setIsAuthenticated","products","setProducts","users","setUsers","loginUser","logoutUser","addProduct","product","prev","updateProduct","updatedProduct","map","id","deleteProduct","filter","addUser","user","updateUser","updatedUser","deleteUser","addStockTransaction","productId","quantity","type","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useInventory","_s2","$RefreshReg$"],"sources":["/Users/Khahli/Desktop/wings-cafe-inventory/src/context/InventoryContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\n// Create Inventory Context\nexport const InventoryContext = createContext();\n\n// Create a Provider component\nexport const InventoryProvider = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [products, setProducts] = useState([]);\n  const [users, setUsers] = useState([]);\n\n  // Authentication methods\n  const loginUser = () => {\n    setIsAuthenticated(true);\n  };\n\n  const logoutUser = () => {\n    setIsAuthenticated(false);\n  };\n\n  // Product management methods\n  const addProduct = (product) => {\n    setProducts((prev) => [...prev, product]);\n  };\n\n  const updateProduct = (updatedProduct) => {\n    setProducts((prev) =>\n      prev.map((product) => (product.id === updatedProduct.id ? updatedProduct : product))\n    );\n  };\n\n  const deleteProduct = (id) => {\n    setProducts((prev) => prev.filter((product) => product.id !== id));\n  };\n\n  // User management methods\n  const addUser = (user) => {\n    setUsers((prev) => [...prev, user]);\n  };\n\n  const updateUser = (updatedUser) => {\n    setUsers((prev) =>\n      prev.map((user) => (user.id === updatedUser.id ? updatedUser : user))\n    );\n  };\n\n  const deleteUser = (id) => {\n    setUsers((prev) => prev.filter((user) => user.id !== id));\n  };\n\n  // Stock transaction management\n  const addStockTransaction = ({ productId, quantity, type }) => {\n    setProducts((prev) =>\n      prev.map((product) => {\n        if (product.id === productId) {\n          return {\n            ...product,\n            quantity: type === 'add' ? product.quantity + quantity : product.quantity - quantity,\n          };\n        }\n        return product;\n      })\n    );\n  };\n\n  return (\n    <InventoryContext.Provider\n      value={{\n        isAuthenticated,\n        loginUser,\n        logoutUser,\n        products,\n        addProduct,\n        updateProduct,\n        deleteProduct,\n        users,\n        addUser,\n        updateUser,\n        deleteUser,\n        addStockTransaction,\n      }}\n    >\n      {children}\n    </InventoryContext.Provider>\n  );\n};\n\n// Create a custom hook for easy access to the Inventory Context\nexport const useInventory = () => {\n  return useContext(InventoryContext);\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}