{"ast":null,"code":"var _jsxFileName = \"/Users/Khahli/Desktop/wings-cafe-inventory/src/context/InventoryContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InventoryContext = /*#__PURE__*/createContext();\nexport const InventoryProvider = ({\n  children\n}) => {\n  _s();\n  const [products, setProducts] = useState(() => {\n    const savedProducts = localStorage.getItem('products');\n    return savedProducts ? JSON.parse(savedProducts) : [];\n  });\n  const [transactions, setTransactions] = useState([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const loginUser = () => setIsAuthenticated(true);\n  const logoutUser = () => {\n    setIsAuthenticated(false);\n    setProducts([]); // Clear products on logout if required\n  };\n  const addProduct = product => {\n    setProducts(prev => {\n      const updatedProducts = [...prev, product];\n      localStorage.setItem('products', JSON.stringify(updatedProducts)); // Persist to local storage\n      return updatedProducts;\n    });\n  };\n  const updateProduct = updatedProduct => {\n    setProducts(prev => {\n      const newProducts = prev.map(product => product.id === updatedProduct.id ? updatedProduct : product);\n      localStorage.setItem('products', JSON.stringify(newProducts)); // Persist to local storage\n      return newProducts;\n    });\n  };\n  const deleteProduct = id => {\n    setProducts(prev => {\n      const newProducts = prev.filter(product => product.id !== id);\n      localStorage.setItem('products', JSON.stringify(newProducts)); // Persist to local storage\n      return newProducts;\n    });\n  };\n  const addStockTransaction = transaction => {\n    // Check if the product exists\n    const productExists = products.some(product => product.id === transaction.productId);\n    if (productExists) {\n      setTransactions(prev => [...prev, transaction]);\n      updateStock(transaction.productId, transaction.quantity, transaction.type);\n    } else {\n      console.error(`Cannot add transaction. Product with ID ${transaction.productId} not found.`);\n    }\n  };\n  const updateStock = (productId, quantity, type) => {\n    const product = products.find(product => product.id === productId);\n    if (product) {\n      const updatedQuantity = type === 'add' ? product.quantity + quantity : product.quantity - quantity;\n      setProducts(prev => {\n        const newProducts = prev.map(product => product.id === productId ? {\n          ...product,\n          quantity: updatedQuantity\n        } : product);\n        localStorage.setItem('products', JSON.stringify(newProducts)); // Persist to local storage\n        return newProducts;\n      });\n    } else {\n      console.error(`Product with ID ${productId} not found. Cannot update stock.`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(InventoryContext.Provider, {\n    value: {\n      products,\n      addProduct,\n      updateProduct,\n      deleteProduct,\n      transactions,\n      addStockTransaction,\n      updateStock,\n      isAuthenticated,\n      loginUser,\n      logoutUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(InventoryProvider, \"UBWtkxtRB9nf8lvTvZw1CRgJjco=\");\n_c = InventoryProvider;\nvar _c;\n$RefreshReg$(_c, \"InventoryProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","InventoryContext","InventoryProvider","children","_s","products","setProducts","savedProducts","localStorage","getItem","JSON","parse","transactions","setTransactions","isAuthenticated","setIsAuthenticated","loginUser","logoutUser","addProduct","product","prev","updatedProducts","setItem","stringify","updateProduct","updatedProduct","newProducts","map","id","deleteProduct","filter","addStockTransaction","transaction","productExists","some","productId","updateStock","quantity","type","console","error","find","updatedQuantity","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Khahli/Desktop/wings-cafe-inventory/src/context/InventoryContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nexport const InventoryContext = createContext();\n\nexport const InventoryProvider = ({ children }) => {\n  const [products, setProducts] = useState(() => {\n    const savedProducts = localStorage.getItem('products');\n    return savedProducts ? JSON.parse(savedProducts) : [];\n  });\n  \n  const [transactions, setTransactions] = useState([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const loginUser = () => setIsAuthenticated(true);\n  const logoutUser = () => {\n    setIsAuthenticated(false);\n    setProducts([]); // Clear products on logout if required\n  };\n\n  const addProduct = (product) => {\n    setProducts((prev) => {\n      const updatedProducts = [...prev, product];\n      localStorage.setItem('products', JSON.stringify(updatedProducts)); // Persist to local storage\n      return updatedProducts;\n    });\n  };\n\n  const updateProduct = (updatedProduct) => {\n    setProducts((prev) => {\n      const newProducts = prev.map(product => \n        product.id === updatedProduct.id ? updatedProduct : product\n      );\n      localStorage.setItem('products', JSON.stringify(newProducts)); // Persist to local storage\n      return newProducts;\n    });\n  };\n\n  const deleteProduct = (id) => {\n    setProducts((prev) => {\n      const newProducts = prev.filter(product => product.id !== id);\n      localStorage.setItem('products', JSON.stringify(newProducts)); // Persist to local storage\n      return newProducts;\n    });\n  };\n\n  const addStockTransaction = (transaction) => {\n    // Check if the product exists\n    const productExists = products.some(product => product.id === transaction.productId);\n    if (productExists) {\n      setTransactions((prev) => [...prev, transaction]);\n      updateStock(transaction.productId, transaction.quantity, transaction.type);\n    } else {\n      console.error(`Cannot add transaction. Product with ID ${transaction.productId} not found.`);\n    }\n  };\n\n  const updateStock = (productId, quantity, type) => {\n    const product = products.find(product => product.id === productId);\n\n    if (product) {\n      const updatedQuantity = type === 'add' \n        ? product.quantity + quantity \n        : product.quantity - quantity;\n      setProducts(prev => {\n        const newProducts = prev.map(product => \n          product.id === productId ? { ...product, quantity: updatedQuantity } : product\n        );\n        localStorage.setItem('products', JSON.stringify(newProducts)); // Persist to local storage\n        return newProducts;\n      });\n    } else {\n      console.error(`Product with ID ${productId} not found. Cannot update stock.`);\n    }\n  };\n\n  return (\n    <InventoryContext.Provider value={{\n      products,\n      addProduct,\n      updateProduct,\n      deleteProduct,\n      transactions,\n      addStockTransaction,\n      updateStock,\n      isAuthenticated,\n      loginUser,\n      logoutUser,\n    }}>\n      {children}\n    </InventoryContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}