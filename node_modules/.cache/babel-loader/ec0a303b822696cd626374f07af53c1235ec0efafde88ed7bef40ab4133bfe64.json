{"ast":null,"code":"var _jsxFileName = \"/Users/Khahli/Desktop/wings-cafe-inventory/src/context/InventoryContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InventoryContext = /*#__PURE__*/createContext();\nexport const InventoryProvider = ({\n  children\n}) => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [transactions, setTransactions] = useState([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Load products from local storage on initial render\n  useEffect(() => {\n    const savedProducts = localStorage.getItem('products');\n    if (savedProducts) {\n      setProducts(JSON.parse(savedProducts));\n    }\n  }, []);\n  const loginUser = () => setIsAuthenticated(true);\n  const logoutUser = () => setIsAuthenticated(false);\n  const addProduct = product => {\n    const updatedProducts = [...products, product];\n    setProducts(updatedProducts);\n    localStorage.setItem('products', JSON.stringify(updatedProducts)); // Save to local storage\n  };\n  const updateProduct = updatedProduct => {\n    const updatedProducts = products.map(product => product.id === updatedProduct.id ? updatedProduct : product);\n    setProducts(updatedProducts);\n    localStorage.setItem('products', JSON.stringify(updatedProducts)); // Save to local storage\n  };\n  const deleteProduct = id => {\n    const updatedProducts = products.filter(product => product.id !== id);\n    setProducts(updatedProducts);\n    localStorage.setItem('products', JSON.stringify(updatedProducts)); // Save to local storage\n  };\n  const addStockTransaction = transaction => {\n    setTransactions([...transactions, transaction]);\n    updateStock(transaction.productId, transaction.quantity, transaction.type);\n  };\n  const updateStock = (id, quantity, type) => {\n    const updatedProducts = products.map(product => {\n      if (product.id === id) {\n        const updatedQuantity = type === 'add' ? product.quantity + quantity : product.quantity - quantity;\n        return {\n          ...product,\n          quantity: updatedQuantity\n        };\n      }\n      return product;\n    });\n    setProducts(updatedProducts);\n    localStorage.setItem('products', JSON.stringify(updatedProducts)); // Save to local storage\n  };\n  return /*#__PURE__*/_jsxDEV(InventoryContext.Provider, {\n    value: {\n      products,\n      addProduct,\n      updateProduct,\n      deleteProduct,\n      transactions,\n      addStockTransaction,\n      updateStock,\n      isAuthenticated,\n      loginUser,\n      logoutUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(InventoryProvider, \"O1/u6sGamU/FfepwFGlbIXkOzzs=\");\n_c = InventoryProvider;\nvar _c;\n$RefreshReg$(_c, \"InventoryProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","InventoryContext","InventoryProvider","children","_s","products","setProducts","transactions","setTransactions","isAuthenticated","setIsAuthenticated","savedProducts","localStorage","getItem","JSON","parse","loginUser","logoutUser","addProduct","product","updatedProducts","setItem","stringify","updateProduct","updatedProduct","map","id","deleteProduct","filter","addStockTransaction","transaction","updateStock","productId","quantity","type","updatedQuantity","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Khahli/Desktop/wings-cafe-inventory/src/context/InventoryContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nexport const InventoryContext = createContext();\n\nexport const InventoryProvider = ({ children }) => {\n  const [products, setProducts] = useState([]);\n  const [transactions, setTransactions] = useState([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Load products from local storage on initial render\n  useEffect(() => {\n    const savedProducts = localStorage.getItem('products');\n    if (savedProducts) {\n      setProducts(JSON.parse(savedProducts));\n    }\n  }, []);\n\n  const loginUser = () => setIsAuthenticated(true);\n  const logoutUser = () => setIsAuthenticated(false);\n\n  const addProduct = (product) => {\n    const updatedProducts = [...products, product];\n    setProducts(updatedProducts);\n    localStorage.setItem('products', JSON.stringify(updatedProducts)); // Save to local storage\n  };\n\n  const updateProduct = (updatedProduct) => {\n    const updatedProducts = products.map(product => \n      product.id === updatedProduct.id ? updatedProduct : product\n    );\n    setProducts(updatedProducts);\n    localStorage.setItem('products', JSON.stringify(updatedProducts)); // Save to local storage\n  };\n\n  const deleteProduct = (id) => {\n    const updatedProducts = products.filter(product => product.id !== id);\n    setProducts(updatedProducts);\n    localStorage.setItem('products', JSON.stringify(updatedProducts)); // Save to local storage\n  };\n\n  const addStockTransaction = (transaction) => {\n    setTransactions([...transactions, transaction]);\n    updateStock(transaction.productId, transaction.quantity, transaction.type);\n  };\n\n  const updateStock = (id, quantity, type) => {\n    const updatedProducts = products.map(product => {\n      if (product.id === id) {\n        const updatedQuantity = type === 'add' \n          ? product.quantity + quantity \n          : product.quantity - quantity;\n        return { ...product, quantity: updatedQuantity };\n      }\n      return product;\n    });\n    setProducts(updatedProducts);\n    localStorage.setItem('products', JSON.stringify(updatedProducts)); // Save to local storage\n  };\n\n  return (\n    <InventoryContext.Provider value={{\n      products,\n      addProduct,\n      updateProduct,\n      deleteProduct,\n      transactions,\n      addStockTransaction,\n      updateStock,\n      isAuthenticated,\n      loginUser,\n      logoutUser,\n    }}>\n      {children}\n    </InventoryContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}