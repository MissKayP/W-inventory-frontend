{"ast":null,"code":"var _jsxFileName = \"/Users/Khahli/Desktop/wings-cafe-inventory/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InventoryContext = /*#__PURE__*/createContext();\nexport const InventoryProvider = ({\n  children\n}) => {\n  _s();\n  const [products, setProducts] = useState(() => {\n    const storedProducts = localStorage.getItem('products');\n    return storedProducts ? JSON.parse(storedProducts) : [];\n  });\n  const [transactions, setTransactions] = useState([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false); // State for authentication\n\n  useEffect(() => {\n    localStorage.setItem('products', JSON.stringify(products));\n  }, [products]);\n  const addProduct = product => {\n    setProducts([...products, product]);\n  };\n  const updateProductQuantity = (productId, quantityChange) => {\n    setProducts(products.map(product => {\n      if (product.id === productId) {\n        return {\n          ...product,\n          quantity: product.quantity + quantityChange\n        };\n      }\n      return product;\n    }));\n  };\n  const addStockTransaction = transaction => {\n    const quantityChange = transaction.type === 'add' ? parseInt(transaction.quantity) : -parseInt(transaction.quantity);\n    updateProductQuantity(transaction.productId, quantityChange);\n    setTransactions([...transactions, transaction]);\n  };\n  const loginUser = () => {\n    setIsAuthenticated(true); // Simulate user login\n  };\n  const logoutUser = () => {\n    setIsAuthenticated(false); // Simulate user logout\n  };\n  return /*#__PURE__*/_jsxDEV(InventoryContext.Provider, {\n    value: {\n      products,\n      addProduct,\n      transactions,\n      addStockTransaction,\n      isAuthenticated,\n      loginUser,\n      logoutUser // Ensure loginUser is included\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(InventoryProvider, \"EezzCWk2DD0uL1ALo3Ulom/sJ88=\");\n_c = InventoryProvider;\nvar _c;\n$RefreshReg$(_c, \"InventoryProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","InventoryContext","InventoryProvider","children","_s","products","setProducts","storedProducts","localStorage","getItem","JSON","parse","transactions","setTransactions","isAuthenticated","setIsAuthenticated","setItem","stringify","addProduct","product","updateProductQuantity","productId","quantityChange","map","id","quantity","addStockTransaction","transaction","type","parseInt","loginUser","logoutUser","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Khahli/Desktop/wings-cafe-inventory/src/components/Login.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nexport const InventoryContext = createContext();\n\nexport const InventoryProvider = ({ children }) => {\n  const [products, setProducts] = useState(() => {\n    const storedProducts = localStorage.getItem('products');\n    return storedProducts ? JSON.parse(storedProducts) : [];\n  });\n  const [transactions, setTransactions] = useState([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false); // State for authentication\n\n  useEffect(() => {\n    localStorage.setItem('products', JSON.stringify(products));\n  }, [products]);\n\n  const addProduct = (product) => {\n    setProducts([...products, product]);\n  };\n\n  const updateProductQuantity = (productId, quantityChange) => {\n    setProducts(products.map(product => {\n      if (product.id === productId) {\n        return { ...product, quantity: product.quantity + quantityChange };\n      }\n      return product;\n    }));\n  };\n\n  const addStockTransaction = (transaction) => {\n    const quantityChange = transaction.type === 'add' ? \n      parseInt(transaction.quantity) : \n      -parseInt(transaction.quantity);\n    updateProductQuantity(transaction.productId, quantityChange);\n    setTransactions([...transactions, transaction]);\n  };\n\n  const loginUser = () => {\n    setIsAuthenticated(true); // Simulate user login\n  };\n\n  const logoutUser = () => {\n    setIsAuthenticated(false); // Simulate user logout\n  };\n\n  return (\n    <InventoryContext.Provider value={{\n      products, addProduct,\n      transactions, addStockTransaction,\n      isAuthenticated, loginUser, logoutUser // Ensure loginUser is included\n    }}>\n      {children}\n    </InventoryContext.Provider>\n  );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,gBAAgB,gBAAGL,aAAa,CAAC,CAAC;AAE/C,OAAO,MAAMM,iBAAiB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,MAAM;IAC7C,MAAMU,cAAc,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACvD,OAAOF,cAAc,GAAGG,IAAI,CAACC,KAAK,CAACJ,cAAc,CAAC,GAAG,EAAE;EACzD,CAAC,CAAC;EACF,MAAM,CAACK,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACiB,eAAe,EAAEC,kBAAkB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE/DC,SAAS,CAAC,MAAM;IACdU,YAAY,CAACQ,OAAO,CAAC,UAAU,EAAEN,IAAI,CAACO,SAAS,CAACZ,QAAQ,CAAC,CAAC;EAC5D,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMa,UAAU,GAAIC,OAAO,IAAK;IAC9Bb,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEc,OAAO,CAAC,CAAC;EACrC,CAAC;EAED,MAAMC,qBAAqB,GAAGA,CAACC,SAAS,EAAEC,cAAc,KAAK;IAC3DhB,WAAW,CAACD,QAAQ,CAACkB,GAAG,CAACJ,OAAO,IAAI;MAClC,IAAIA,OAAO,CAACK,EAAE,KAAKH,SAAS,EAAE;QAC5B,OAAO;UAAE,GAAGF,OAAO;UAAEM,QAAQ,EAAEN,OAAO,CAACM,QAAQ,GAAGH;QAAe,CAAC;MACpE;MACA,OAAOH,OAAO;IAChB,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMO,mBAAmB,GAAIC,WAAW,IAAK;IAC3C,MAAML,cAAc,GAAGK,WAAW,CAACC,IAAI,KAAK,KAAK,GAC/CC,QAAQ,CAACF,WAAW,CAACF,QAAQ,CAAC,GAC9B,CAACI,QAAQ,CAACF,WAAW,CAACF,QAAQ,CAAC;IACjCL,qBAAqB,CAACO,WAAW,CAACN,SAAS,EAAEC,cAAc,CAAC;IAC5DT,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAEe,WAAW,CAAC,CAAC;EACjD,CAAC;EAED,MAAMG,SAAS,GAAGA,CAAA,KAAM;IACtBf,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMgB,UAAU,GAAGA,CAAA,KAAM;IACvBhB,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;EAC7B,CAAC;EAED,oBACEf,OAAA,CAACC,gBAAgB,CAAC+B,QAAQ;IAACC,KAAK,EAAE;MAChC5B,QAAQ;MAAEa,UAAU;MACpBN,YAAY;MAAEc,mBAAmB;MACjCZ,eAAe;MAAEgB,SAAS;MAAEC,UAAU,CAAC;IACzC,CAAE;IAAA5B,QAAA,EACCA;EAAQ;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAEhC,CAAC;AAACjC,EAAA,CAlDWF,iBAAiB;AAAAoC,EAAA,GAAjBpC,iBAAiB;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}