{"ast":null,"code":"var _jsxFileName = \"/Users/Khahli/Documents/wings-cafe-inventory/frontend/src/context/InventoryContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// InventoryContext.js\n\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InventoryContext = /*#__PURE__*/createContext();\nexport const useInventory = () => {\n  _s();\n  return useContext(InventoryContext);\n};\n_s(useInventory, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const InventoryProvider = ({\n  children\n}) => {\n  _s2();\n  const [products, setProducts] = useState([]);\n\n  // Fetch products from backend\n  const fetchProducts = async () => {\n    try {\n      const response = await fetch('http://localhost:5002/api/products');\n      const data = await response.json();\n      setProducts(data);\n    } catch (error) {\n      console.error('Error fetching products:', error);\n    }\n  };\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n\n  // Add new product\n  const addProduct = async product => {\n    try {\n      const response = await fetch('http://localhost:5002/api/products', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(product)\n      });\n      const data = await response.json();\n      setProducts(prevProducts => [...prevProducts, {\n        ...product,\n        id: data.productId\n      }]);\n    } catch (error) {\n      console.error('Error adding product:', error);\n    }\n  };\n\n  // Update product\n  const updateProduct = async (id, updatedProduct) => {\n    try {\n      await fetch(`http://localhost:5002/api/products/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedProduct)\n      });\n      setProducts(prevProducts => prevProducts.map(product => product.id === id ? updatedProduct : product));\n    } catch (error) {\n      console.error('Error updating product:', error);\n    }\n  };\n\n  // Delete product\n  const deleteProduct = async id => {\n    try {\n      await fetch(`http://localhost:5002/api/products/${id}`, {\n        method: 'DELETE'\n      });\n      setProducts(prevProducts => prevProducts.filter(product => product.id !== id));\n    } catch (error) {\n      console.error('Error deleting product:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(InventoryContext.Provider, {\n    value: {\n      products,\n      fetchProducts,\n      addProduct,\n      updateProduct,\n      deleteProduct\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s2(InventoryProvider, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c = InventoryProvider;\nvar _c;\n$RefreshReg$(_c, \"InventoryProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","InventoryContext","useInventory","_s","InventoryProvider","children","_s2","products","setProducts","fetchProducts","response","fetch","data","json","error","console","addProduct","product","method","headers","body","JSON","stringify","prevProducts","id","productId","updateProduct","updatedProduct","map","deleteProduct","filter","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Khahli/Documents/wings-cafe-inventory/frontend/src/context/InventoryContext.js"],"sourcesContent":["// InventoryContext.js\n\nimport React, { createContext, useState, useContext, useEffect } from 'react';\n\nexport const InventoryContext = createContext();\n\nexport const useInventory = () => {\n  return useContext(InventoryContext);\n};\n\nexport const InventoryProvider = ({ children }) => {\n  const [products, setProducts] = useState([]);\n\n  // Fetch products from backend\n  const fetchProducts = async () => {\n    try {\n      const response = await fetch('http://localhost:5002/api/products');\n      const data = await response.json();\n      setProducts(data);\n    } catch (error) {\n      console.error('Error fetching products:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n\n  // Add new product\n  const addProduct = async (product) => {\n    try {\n      const response = await fetch('http://localhost:5002/api/products', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(product),\n      });\n      const data = await response.json();\n      setProducts((prevProducts) => [...prevProducts, { ...product, id: data.productId }]);\n    } catch (error) {\n      console.error('Error adding product:', error);\n    }\n  };\n\n  // Update product\n  const updateProduct = async (id, updatedProduct) => {\n    try {\n      await fetch(`http://localhost:5002/api/products/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(updatedProduct),\n      });\n      setProducts((prevProducts) =>\n        prevProducts.map((product) => (product.id === id ? updatedProduct : product))\n      );\n    } catch (error) {\n      console.error('Error updating product:', error);\n    }\n  };\n\n  // Delete product\n  const deleteProduct = async (id) => {\n    try {\n      await fetch(`http://localhost:5002/api/products/${id}`, {\n        method: 'DELETE',\n      });\n      setProducts((prevProducts) => prevProducts.filter((product) => product.id !== id));\n    } catch (error) {\n      console.error('Error deleting product:', error);\n    }\n  };\n\n  return (\n    <InventoryContext.Provider\n      value={{ products, fetchProducts, addProduct, updateProduct, deleteProduct }}\n    >\n      {children}\n    </InventoryContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}