{"ast":null,"code":"var _jsxFileName = \"/Users/Khahli/Documents/wings-cafe-inventory/frontend/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './SignupAndLogin.css'; // Import the separate CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [isLogin, setIsLogin] = useState(true); // Default to login mode\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  // Handle form submission for both login and signup\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Password validation for signup mode\n    if (!isLogin && password !== confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n    try {\n      // API endpoint dynamically chosen based on the form mode (login or signup)\n      const url = isLogin ? 'http://localhost:5000/api/login' : 'http://localhost:5000/api/register';\n      const response = await axios.post(url, {\n        username,\n        password\n      });\n      if (isLogin) {\n        // Handle successful login\n        console.log('Login successful:', response.data);\n        navigate('/dashboard'); // Navigate to dashboard after successful login\n      } else {\n        // Handle successful signup\n        console.log('Signup successful');\n        navigate('/login'); // Redirect to login page after successful signup\n      }\n    } catch (err) {\n      setError('Error: ' + (err.response ? err.response.data : 'Unknown error'));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isLogin ? 'Login' : 'Signup'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        className: \"input-field\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        className: \"input-field\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirm Password\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value),\n        className: \"input-field\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-btn\",\n        children: isLogin ? 'Login' : 'Signup'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"toggle-login-signup\",\n      children: [isLogin ? \"Don't have an account? \" : 'Already have an account? ', /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsLogin(!isLogin),\n        className: \"toggle-btn\",\n        children: isLogin ? 'Sign Up' : 'Log In'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"TY/35MADhEdhQmf5smW9JiokCCo=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","Login","_s","isLogin","setIsLogin","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","error","setError","navigate","handleSubmit","e","preventDefault","url","response","post","console","log","data","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["/Users/Khahli/Documents/wings-cafe-inventory/frontend/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom'; \nimport './SignupAndLogin.css'; // Import the separate CSS file\n\nconst Login = () => {\n  const [isLogin, setIsLogin] = useState(true); // Default to login mode\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate(); \n\n  // Handle form submission for both login and signup\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Password validation for signup mode\n    if (!isLogin && password !== confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n\n    try {\n      // API endpoint dynamically chosen based on the form mode (login or signup)\n      const url = isLogin ? 'http://localhost:5000/api/login' : 'http://localhost:5000/api/register';\n      const response = await axios.post(url, { username, password });\n\n      if (isLogin) {\n        // Handle successful login\n        console.log('Login successful:', response.data);\n        navigate('/dashboard');  // Navigate to dashboard after successful login\n      } else {\n        // Handle successful signup\n        console.log('Signup successful');\n        navigate('/login');  // Redirect to login page after successful signup\n      }\n    } catch (err) {\n      setError('Error: ' + (err.response ? err.response.data : 'Unknown error'));\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h2>{isLogin ? 'Login' : 'Signup'}</h2>\n      <form onSubmit={handleSubmit} className=\"form-container\">\n        <input\n          type=\"text\"\n          placeholder=\"Username\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          className=\"input-field\"\n          required\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          className=\"input-field\"\n          required\n        />\n        \n        {/* Display confirm password field only in signup mode */}\n        {!isLogin && (\n          <input\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n            className=\"input-field\"\n            required\n          />\n        )}\n\n        <button type=\"submit\" className=\"submit-btn\">\n          {isLogin ? 'Login' : 'Signup'}\n        </button>\n      </form>\n\n      {error && <p className=\"error\">{error}</p>}\n\n      <p className=\"toggle-login-signup\">\n        {isLogin ? \"Don't have an account? \" : 'Already have an account? '}\n        <button onClick={() => setIsLogin(!isLogin)} className=\"toggle-btn\">\n          {isLogin ? 'Sign Up' : 'Log In'}\n        </button>\n      </p>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,sBAAsB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMiB,QAAQ,GAAGf,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMgB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,IAAI,CAACb,OAAO,IAAII,QAAQ,KAAKE,eAAe,EAAE;MAC5CG,QAAQ,CAAC,wBAAwB,CAAC;MAClC;IACF;IAEA,IAAI;MACF;MACA,MAAMK,GAAG,GAAGd,OAAO,GAAG,iCAAiC,GAAG,oCAAoC;MAC9F,MAAMe,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CAACF,GAAG,EAAE;QAAEZ,QAAQ;QAAEE;MAAS,CAAC,CAAC;MAE9D,IAAIJ,OAAO,EAAE;QACX;QACAiB,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,QAAQ,CAACI,IAAI,CAAC;QAC/CT,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAE;MAC3B,CAAC,MAAM;QACL;QACAO,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;QAChCR,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAE;MACvB;IACF,CAAC,CAAC,OAAOU,GAAG,EAAE;MACZX,QAAQ,CAAC,SAAS,IAAIW,GAAG,CAACL,QAAQ,GAAGK,GAAG,CAACL,QAAQ,CAACI,IAAI,GAAG,eAAe,CAAC,CAAC;IAC5E;EACF,CAAC;EAED,oBACEtB,OAAA;IAAKwB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBzB,OAAA;MAAAyB,QAAA,EAAKtB,OAAO,GAAG,OAAO,GAAG;IAAQ;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvC7B,OAAA;MAAM8B,QAAQ,EAAEhB,YAAa;MAACU,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBACtDzB,OAAA;QACE+B,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAE5B,QAAS;QAChB6B,QAAQ,EAAGnB,CAAC,IAAKT,WAAW,CAACS,CAAC,CAACoB,MAAM,CAACF,KAAK,CAAE;QAC7CT,SAAS,EAAC,aAAa;QACvBY,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACF7B,OAAA;QACE+B,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAE1B,QAAS;QAChB2B,QAAQ,EAAGnB,CAAC,IAAKP,WAAW,CAACO,CAAC,CAACoB,MAAM,CAACF,KAAK,CAAE;QAC7CT,SAAS,EAAC,aAAa;QACvBY,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,EAGD,CAAC1B,OAAO,iBACPH,OAAA;QACE+B,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,kBAAkB;QAC9BC,KAAK,EAAExB,eAAgB;QACvByB,QAAQ,EAAGnB,CAAC,IAAKL,kBAAkB,CAACK,CAAC,CAACoB,MAAM,CAACF,KAAK,CAAE;QACpDT,SAAS,EAAC,aAAa;QACvBY,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CACF,eAED7B,OAAA;QAAQ+B,IAAI,EAAC,QAAQ;QAACP,SAAS,EAAC,YAAY;QAAAC,QAAA,EACzCtB,OAAO,GAAG,OAAO,GAAG;MAAQ;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EAENlB,KAAK,iBAAIX,OAAA;MAAGwB,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEd;IAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE1C7B,OAAA;MAAGwB,SAAS,EAAC,qBAAqB;MAAAC,QAAA,GAC/BtB,OAAO,GAAG,yBAAyB,GAAG,2BAA2B,eAClEH,OAAA;QAAQqC,OAAO,EAAEA,CAAA,KAAMjC,UAAU,CAAC,CAACD,OAAO,CAAE;QAACqB,SAAS,EAAC,YAAY;QAAAC,QAAA,EAChEtB,OAAO,GAAG,SAAS,GAAG;MAAQ;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAAC3B,EAAA,CArFID,KAAK;EAAA,QAMQH,WAAW;AAAA;AAAAwC,EAAA,GANxBrC,KAAK;AAuFX,eAAeA,KAAK;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}